{"version":3,"sources":["components\\TransactionDetails.js","components\\DisplayTransactions.js"],"names":["TransactionDetails","inputs","outputs","weight","size","usd","displaySatoshi","totalInput","totalOutput","map","input","index","value","addr","output","Details","IOContainer","IO","IOList","IOItem","IOAddr","IOValue","Misc","Table","DT","DD","DisplayTransactions","txs","user","toggleDetails","expanded","tx","prev_out","out","spent","sum","item","tx_index","Date","time","toDateString","slice","details","includes","TransactionsWrapper","TransactionItem","TransactionDate","TransactionId","flex","textAlign","TransactionSum","props","Transaction"],"mappings":"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","file":"DisplayTransactions.b946a1f0.map","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\nimport styled from \"react-emotion\";\r\nimport { convertToUSD } from \"../utils/helper\";\r\n\r\nfunction TransactionDetails({\r\n  inputs,\r\n  outputs,\r\n  weight,\r\n  size,\r\n  usd,\r\n  displaySatoshi\r\n}) {\r\n  let totalInput = 0;\r\n  let totalOutput = 0;\r\n\r\n  return (\r\n    <Details>\r\n      <IOContainer>\r\n        <IO>\r\n          <h3>Inputs</h3>\r\n          <IOList>\r\n            {inputs.map((input, index) => {\r\n              totalInput += input.value;\r\n\r\n              return (\r\n                <IOItem key={index + input.value + input.addr}>\r\n                  <IOAddr>{input.addr}</IOAddr>\r\n                  <IOValue>\r\n                    {displaySatoshi\r\n                      ? input.value\r\n                      : convertToUSD(input.value, usd)}\r\n                  </IOValue>\r\n                </IOItem>\r\n              );\r\n            })}\r\n          </IOList>\r\n          <div>{`Input Total: ${\r\n            displaySatoshi ? totalInput : convertToUSD(totalInput, usd)\r\n          }`}</div>\r\n        </IO>\r\n        <IO>\r\n          <h3>Outputs</h3>\r\n          <IOList>\r\n            {outputs.map((output, index) => {\r\n              totalOutput += output.value;\r\n\r\n              return (\r\n                <IOItem key={index + output.value + output.addr}>\r\n                  <IOAddr>{output.addr}</IOAddr>\r\n                  <IOValue>\r\n                    {displaySatoshi\r\n                      ? output.value\r\n                      : convertToUSD(output.value, usd)}\r\n                  </IOValue>\r\n                </IOItem>\r\n              );\r\n            })}\r\n          </IOList>\r\n          <div>\r\n            {`Output Total: ${\r\n              displaySatoshi ? totalOutput : convertToUSD(totalOutput, usd)\r\n            }`}\r\n          </div>\r\n        </IO>\r\n      </IOContainer>\r\n      <Misc>\r\n        <h3>Details</h3>\r\n        <Table>\r\n          <DT>Fees</DT>\r\n          <DD>\r\n            {displaySatoshi\r\n              ? totalInput - totalOutput\r\n              : convertToUSD(totalInput - totalOutput, usd)}\r\n          </DD>\r\n          <DT>Size</DT>\r\n          <DD>{size}</DD>\r\n          <DT>Weight</DT>\r\n          <DD>{weight}</DD>\r\n        </Table>\r\n      </Misc>\r\n    </Details>\r\n  );\r\n}\r\n\r\nconst Details = styled(\"div\")({\r\n  marginBottom: \"15px\",\r\n  backgroundColor: \"var(--gray)\",\r\n  padding: \"0 20px 20px 20px\"\r\n});\r\n\r\nconst IOContainer = styled(\"div\")({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  flexWrap: \"wrap\"\r\n});\r\n\r\nconst IO = styled(\"div\")({\r\n  flex: \"1\"\r\n});\r\n\r\nconst IOList = styled(\"ul\")({\r\n  marginBottom: \"20px\"\r\n});\r\n\r\nconst IOItem = styled(\"li\")({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  margin: \"5px 0\"\r\n});\r\n\r\nconst IOAddr = styled(\"div\")({\r\n  paddingRight: \"20px\",\r\n  marginBottom: \"5px\",\r\n\r\n  \"@media (max-width: 426px)\": {\r\n    fontSize: \"14px\"\r\n  }\r\n});\r\n\r\nconst IOValue = styled(\"div\")({\r\n  marginRight: \"20px\"\r\n});\r\n\r\nconst Misc = styled(\"div\")();\r\n\r\nconst Table = styled(\"dl\")({\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"auto 1fr\",\r\n  gridGap: \"5px\"\r\n});\r\n\r\nconst DT = styled(\"dt\")({\r\n  gridColumn: 1\r\n});\r\n\r\nconst DD = styled(\"dd\")({\r\n  gridColumn: \"2\",\r\n  paddingLeft: \"20px\"\r\n});\r\nexport default TransactionDetails;\r\n","import React from \"react\";\r\nimport styled from \"react-emotion\";\r\nimport { convertToUSD, getSum } from \"../utils/helper\";\r\nimport TransactionDetails from \"./TransactionDetails\";\r\n\r\nfunction DisplayTransactions({\r\n  txs,\r\n  user,\r\n  displaySatoshi,\r\n  usd,\r\n  toggleDetails,\r\n  expanded\r\n}) {\r\n  return (\r\n    <TransactionsWrapper>\r\n      <h3>Transactions</h3>\r\n      <ul>\r\n        {txs.map(tx => {\r\n          const inputs = tx.inputs.map(input => {\r\n            if (input.prev_out) {\r\n              let { addr, value } = input.prev_out;\r\n              return { addr, value };\r\n            } else {\r\n              return { addr: \"Newly Mined\", value: null };\r\n            }\r\n          });\r\n\r\n          const outputs = tx.out.map(output => {\r\n            let { spent, addr, value } = output;\r\n            return { spent, addr, value };\r\n          });\r\n\r\n          const sum = getSum(inputs, outputs, user);\r\n          const item = (\r\n            <TransactionItem\r\n              onClick={() => {\r\n                toggleDetails(tx.tx_index);\r\n              }}\r\n            >\r\n              <TransactionDate>\r\n                {new Date(tx.time * 1000).toDateString().slice(4)}\r\n              </TransactionDate>\r\n              <TransactionId>{`Tx ID: ${tx.tx_index}`}</TransactionId>\r\n              <TransactionSum sum={sum}>\r\n                {displaySatoshi ? sum : convertToUSD(sum, usd)}\r\n              </TransactionSum>\r\n            </TransactionItem>\r\n          );\r\n\r\n          const details = (\r\n            <TransactionDetails\r\n              inputs={inputs}\r\n              outputs={outputs}\r\n              weight={tx.weight}\r\n              size={tx.size}\r\n              displaySatoshi={displaySatoshi}\r\n              expanded={expanded}\r\n              usd={usd}\r\n            />\r\n          );\r\n\r\n          return (\r\n            <Transaction key={tx.tx_index} /*details={details}*/>\r\n              {item}\r\n              {expanded.includes(tx.tx_index) && details}\r\n            </Transaction>\r\n          );\r\n        })}\r\n      </ul>\r\n    </TransactionsWrapper>\r\n  );\r\n}\r\n\r\nconst TransactionsWrapper = styled(\"div\")({\r\n  width: \"100%\",\r\n  margin: \"40px 0\"\r\n});\r\n\r\nconst TransactionItem = styled(\"div\")({\r\n  cursor: \"pointer\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  padding: \"5px\",\r\n  marginTop: \"5px\"\r\n});\r\n\r\nconst TransactionDate = styled(\"div\")();\r\nconst TransactionId = styled(\"div\")({ flex: \"1\", textAlign: \"center\" });\r\nconst TransactionSum = styled(\"div\")(props => ({\r\n  textAlign: \"right\",\r\n  color: props.sum > 0 ? \"#1DB954\" : \"red\"\r\n}));\r\n\r\nconst Transaction = styled(\"li\")({\r\n  listStyle: \"none\"\r\n});\r\n\r\nexport default DisplayTransactions;\r\n"]}