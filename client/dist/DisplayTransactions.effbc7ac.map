{"version":3,"sources":["components\\TransactionDetails.js","components\\DisplayTransactions.js"],"names":["TransactionDetails","inputs","outputs","weight","size","usd","displaySatoshi","totalInput","totalOutput","map","input","index","value","addr","output","Details","marginBottom","backgroundColor","padding","IOContainer","display","justifyContent","flexWrap","IO","flex","IOList","IOItem","margin","IOAddr","paddingRight","fontSize","IOValue","marginRight","Misc","Table","gridTemplateColumns","gridGap","DT","gridColumn","DD","paddingLeft","DisplayTransactions","txs","user","toggleDetails","expanded","tx","prev_out","out","spent","sum","item","tx_index","Date","time","toDateString","slice","details","includes","TransactionsWrapper","width","TransactionItem","cursor","marginTop","TransactionDate","TransactionId","textAlign","TransactionSum","color","props","Transaction","listStyle"],"mappings":"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","file":"DisplayTransactions.effbc7ac.map","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\nimport styled from \"react-emotion\";\r\nimport { convertToUSD } from \"../utils/helper\";\r\n\r\nfunction TransactionDetails({\r\n  inputs,\r\n  outputs,\r\n  weight,\r\n  size,\r\n  usd,\r\n  displaySatoshi\r\n}) {\r\n  let totalInput = 0;\r\n  let totalOutput = 0;\r\n\r\n  return (\r\n    <Details>\r\n      <IOContainer>\r\n        <IO>\r\n          <h3>Inputs</h3>\r\n          <IOList>\r\n            {inputs.map((input, index) => {\r\n              totalInput += input.value;\r\n\r\n              return (\r\n                <IOItem key={index + input.value + input.addr}>\r\n                  <IOAddr>{input.addr}</IOAddr>\r\n                  <IOValue>\r\n                    {displaySatoshi\r\n                      ? input.value\r\n                      : convertToUSD(input.value, usd)}\r\n                  </IOValue>\r\n                </IOItem>\r\n              );\r\n            })}\r\n          </IOList>\r\n          <div>{`Input Total: ${\r\n            displaySatoshi ? totalInput : convertToUSD(totalInput, usd)\r\n          }`}</div>\r\n        </IO>\r\n        <IO>\r\n          <h3>Outputs</h3>\r\n          <IOList>\r\n            {outputs.map((output, index) => {\r\n              totalOutput += output.value;\r\n\r\n              return (\r\n                <IOItem key={index + output.value + output.addr}>\r\n                  <IOAddr>{output.addr}</IOAddr>\r\n                  <IOValue>\r\n                    {displaySatoshi\r\n                      ? output.value\r\n                      : convertToUSD(output.value, usd)}\r\n                  </IOValue>\r\n                </IOItem>\r\n              );\r\n            })}\r\n          </IOList>\r\n          <div>\r\n            {`Output Total: ${\r\n              displaySatoshi ? totalOutput : convertToUSD(totalOutput, usd)\r\n            }`}\r\n          </div>\r\n        </IO>\r\n      </IOContainer>\r\n      <Misc>\r\n        <h3>Details</h3>\r\n        <Table>\r\n          <DT>Fees</DT>\r\n          <DD>\r\n            {displaySatoshi\r\n              ? totalInput - totalOutput\r\n              : convertToUSD(totalInput - totalOutput, usd)}\r\n          </DD>\r\n          <DT>Size</DT>\r\n          <DD>{size}</DD>\r\n          <DT>Weight</DT>\r\n          <DD>{weight}</DD>\r\n        </Table>\r\n      </Misc>\r\n    </Details>\r\n  );\r\n}\r\n\r\nconst Details = styled(\"div\")({\r\n  marginBottom: \"15px\",\r\n  backgroundColor: \"var(--gray)\",\r\n  padding: \"0 20px 20px 20px\"\r\n});\r\n\r\nconst IOContainer = styled(\"div\")({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  flexWrap: \"wrap\"\r\n});\r\n\r\nconst IO = styled(\"div\")({\r\n  flex: \"1\"\r\n});\r\n\r\nconst IOList = styled(\"ul\")({\r\n  marginBottom: \"20px\"\r\n});\r\n\r\nconst IOItem = styled(\"li\")({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  margin: \"5px 0\"\r\n});\r\n\r\nconst IOAddr = styled(\"div\")({\r\n  paddingRight: \"20px\",\r\n  marginBottom: \"5px\",\r\n\r\n  \"@media (max-width: 426px)\": {\r\n    fontSize: \"14px\"\r\n  }\r\n});\r\n\r\nconst IOValue = styled(\"div\")({\r\n  marginRight: \"20px\"\r\n});\r\n\r\nconst Misc = styled(\"div\")();\r\n\r\nconst Table = styled(\"dl\")({\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"auto 1fr\",\r\n  gridGap: \"5px\"\r\n});\r\n\r\nconst DT = styled(\"dt\")({\r\n  gridColumn: 1\r\n});\r\n\r\nconst DD = styled(\"dd\")({\r\n  gridColumn: \"2\",\r\n  paddingLeft: \"20px\"\r\n});\r\nexport default TransactionDetails;\r\n","import React from \"react\";\r\nimport styled from \"react-emotion\";\r\nimport { convertToUSD, getSum } from \"../utils/helper\";\r\nimport TransactionDetails from \"./TransactionDetails\";\r\n\r\nfunction DisplayTransactions({\r\n  txs,\r\n  user,\r\n  displaySatoshi,\r\n  usd,\r\n  toggleDetails,\r\n  expanded\r\n}) {\r\n  return (\r\n    <TransactionsWrapper>\r\n      <h3>Transactions</h3>\r\n      <ul>\r\n        {txs.map(tx => {\r\n          const inputs = tx.inputs.map(input => {\r\n            if (input.prev_out) {\r\n              let { addr, value } = input.prev_out;\r\n              return { addr, value };\r\n            } else {\r\n              return { addr: \"Newly Mined\", value: null };\r\n            }\r\n          });\r\n\r\n          const outputs = tx.out.map(output => {\r\n            let { spent, addr, value } = output;\r\n            return { spent, addr, value };\r\n          });\r\n\r\n          const sum = getSum(inputs, outputs, user);\r\n          const item = (\r\n            <TransactionItem\r\n              onClick={() => {\r\n                toggleDetails(tx.tx_index);\r\n              }}\r\n            >\r\n              <TransactionDate>\r\n                {new Date(tx.time * 1000).toDateString().slice(4)}\r\n              </TransactionDate>\r\n              <TransactionId>{`Tx ID: ${tx.tx_index}`}</TransactionId>\r\n              <TransactionSum sum={sum}>\r\n                {displaySatoshi ? sum : convertToUSD(sum, usd)}\r\n              </TransactionSum>\r\n            </TransactionItem>\r\n          );\r\n\r\n          const details = (\r\n            <TransactionDetails\r\n              inputs={inputs}\r\n              outputs={outputs}\r\n              weight={tx.weight}\r\n              size={tx.size}\r\n              displaySatoshi={displaySatoshi}\r\n              expanded={expanded}\r\n              usd={usd}\r\n            />\r\n          );\r\n\r\n          return (\r\n            <Transaction key={tx.tx_index} /*details={details}*/>\r\n              {item}\r\n              {expanded.includes(tx.tx_index) && details}\r\n            </Transaction>\r\n          );\r\n        })}\r\n      </ul>\r\n    </TransactionsWrapper>\r\n  );\r\n}\r\n\r\nconst TransactionsWrapper = styled(\"div\")({\r\n  width: \"100%\",\r\n  margin: \"40px 0\"\r\n});\r\n\r\nconst TransactionItem = styled(\"div\")({\r\n  cursor: \"pointer\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  padding: \"5px\",\r\n  marginTop: \"5px\"\r\n});\r\n\r\nconst TransactionDate = styled(\"div\")();\r\nconst TransactionId = styled(\"div\")({ flex: \"1\", textAlign: \"center\" });\r\nconst TransactionSum = styled(\"div\")(props => ({\r\n  textAlign: \"right\",\r\n  color: props.sum > 0 ? \"#1DB954\" : \"red\"\r\n}));\r\n\r\nconst Transaction = styled(\"li\")({\r\n  listStyle: \"none\"\r\n});\r\n\r\nexport default DisplayTransactions;\r\n"]}