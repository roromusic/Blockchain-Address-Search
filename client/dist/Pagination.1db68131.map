{"version":3,"sources":["components\\Pagination.js"],"names":["Pagination","page","n_tx","changePage","resetExpanded","last","Math","ceil","pages","getPages","start","max","i","push","Pages","margin","Buttons","display","flexWrap","justifyContent","PageButton","selected","border","padding","borderRadius","color","cursor","backgroundColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,SAAbA,UAAa,OAA+C;AAAA,MAA5CC,IAA4C,QAA5CA,IAA4C;AAAA,MAAtCC,IAAsC,QAAtCA,IAAsC;AAAA,MAAhCC,UAAgC,QAAhCA,UAAgC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAChE,MAAMC,OAAOC,KAAKC,IAAL,CAAUL,OAAO,EAAjB,CAAb;AACA,MAAIM,cAAJ;;AAEA,MAAIH,OAAO,EAAX,EAAe;AACbG,YAAQC,SAAS,CAAT,EAAYJ,IAAZ,CAAR;AACD,GAFD,MAEO;AACL,QAAIJ,OAAO,CAAX,EAAc;AACZO,cAAQC,SAAS,CAAT,EAAY,CAAZ,CAAR;AACD,KAFD,MAEO,IAAIR,OAAOI,OAAO,CAAlB,EAAqB;AAC1BG,cAAQC,SAASJ,OAAO,CAAhB,EAAmBA,IAAnB,CAAR;AACD,KAFM,MAEA;AACLG,cAAQC,SAASR,OAAO,CAAhB,EAAmBA,OAAO,CAA1B,CAAR;AACD;AACF;;AAED,WAASQ,QAAT,CAAkBC,KAAlB,EAAyBC,GAAzB,EAA8B;AAC5B,QAAMH,QAAQ,EAAd;;AAD4B,+BAEnBI,CAFmB;AAG1BJ,YAAMK,IAAN,CACE;AAAC,kBAAD;AAAA;AACE,eAAKD,CADP;AAEE,mBAAS,mBAAM;AACbR;AACAD,uBAAWS,CAAX;AACD,WALH;AAME,oBAAUA,MAAMX;AANlB;AAQGW;AARH,OADF;AAH0B;;AAE5B,SAAK,IAAIA,IAAIF,KAAb,EAAoBE,KAAKD,GAAzB,EAA8BC,GAA9B,EAAmC;AAAA,YAA1BA,CAA0B;AAalC;;AAED,WAAOJ,KAAP;AACD;;AAED,SACE;AAAC,SAAD;AAAA;AACE;AAAC,aAAD;AAAA;AACE;AAAC,kBAAD;AAAA;AACE,mBAAS,mBAAM;AACbJ;AACAD,uBAAWF,SAAS,CAAT,GAAa,CAAb,GAAiBA,OAAO,CAAnC;AACD;AAJH;AAAA;AAAA,OADF;AASGA,aAAO,CAAP,IACC;AAAC,kBAAD;AAAA;AACE,gBAAM,MADR;AAEE,mBAAS,mBAAM;AACbG;AACAD,uBAAW,CAAX;AACD;AALH;AAAA;AAAA,OAVJ;AAoBGK,WApBH;AAqBGP,aAAOI,OAAO,CAAd,IACC;AAAC,kBAAD;AAAA;AACE,mBAAS,mBAAM;AACbD;AACAD,uBAAWE,IAAX;AACD;AAJH;AAAA,gBAKQA;AALR,OAtBJ;AA6BE;AAAC,kBAAD;AAAA;AACE,mBAAS,mBAAM;AACbD;AACAD,uBAAWF,SAASI,IAAT,GAAgBA,IAAhB,GAAuBJ,OAAO,CAAzC;AACD;AAJH;AAAA;AAAA;AA7BF;AADF,GADF;AA0CD,CA9ED;;AAgFA,IAAMa,QAAQ,4BAAO,KAAP,EAAc;AAC1BC,UAAQ;AADkB,CAAd,CAAd;AAGA,IAAMC,UAAU,4BAAO,IAAP,EAAa;AAC3BC,WAAS,MADkB;AAE3BC,YAAU,MAFiB;AAG3BC,kBAAgB;AAHW,CAAb,CAAhB;;AAMA,IAAMC,aAAa,4BAAO,IAAP,EAAa;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,SAAmB;AACjDC,YAAQ,iBADyC;AAEjDP,YAAQ,KAFyC;AAGjDQ,aAAS,KAHwC;AAIjDC,kBAAc,KAJmC;AAKjDC,WAAO,OAL0C;AAMjDC,YAAQ,SANyC;AAOjDC,qBAAiBN,WAAW,cAAX,GAA4B;AAPI,GAAnB;AAAA,CAAb,CAAnB;kBASerB","file":"Pagination.1db68131.map","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\nimport styled from \"react-emotion\";\r\n\r\nconst Pagination = ({ page, n_tx, changePage, resetExpanded }) => {\r\n  const last = Math.ceil(n_tx / 50);\r\n  let pages;\r\n\r\n  if (last < 10) {\r\n    pages = getPages(1, last);\r\n  } else {\r\n    if (page < 5) {\r\n      pages = getPages(1, 9);\r\n    } else if (page > last - 4) {\r\n      pages = getPages(last - 8, last);\r\n    } else {\r\n      pages = getPages(page - 4, page + 4);\r\n    }\r\n  }\r\n\r\n  function getPages(start, max) {\r\n    const pages = [];\r\n    for (let i = start; i <= max; i++) {\r\n      pages.push(\r\n        <PageButton\r\n          key={i}\r\n          onClick={() => {\r\n            resetExpanded();\r\n            changePage(i);\r\n          }}\r\n          selected={i === page}\r\n        >\r\n          {i}\r\n        </PageButton>\r\n      );\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  return (\r\n    <Pages>\r\n      <Buttons>\r\n        <PageButton\r\n          onClick={() => {\r\n            resetExpanded();\r\n            changePage(page === 1 ? 1 : page - 1);\r\n          }}\r\n        >\r\n          Previous\r\n        </PageButton>\r\n        {page > 5 && (\r\n          <PageButton\r\n            text={\"1...\"}\r\n            onClick={() => {\r\n              resetExpanded();\r\n              changePage(1);\r\n            }}\r\n          >\r\n            1...\r\n          </PageButton>\r\n        )}\r\n        {pages}\r\n        {page < last - 4 && (\r\n          <PageButton\r\n            onClick={() => {\r\n              resetExpanded();\r\n              changePage(last);\r\n            }}\r\n          >{`...${last}`}</PageButton>\r\n        )}\r\n        <PageButton\r\n          onClick={() => {\r\n            resetExpanded();\r\n            changePage(page === last ? last : page + 1);\r\n          }}\r\n        >\r\n          Next\r\n        </PageButton>\r\n      </Buttons>\r\n    </Pages>\r\n  );\r\n};\r\n\r\nconst Pages = styled(\"div\")({\r\n  margin: \"20px\"\r\n});\r\nconst Buttons = styled(\"ul\")({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"center\"\r\n});\r\n\r\nconst PageButton = styled(\"li\")(({ selected }) => ({\r\n  border: \"1px solid white\",\r\n  margin: \"5px\",\r\n  padding: \"5px\",\r\n  borderRadius: \"3px\",\r\n  color: \"white\",\r\n  cursor: \"pointer\",\r\n  backgroundColor: selected ? \"var(--green)\" : null\r\n}));\r\nexport default Pagination;\r\n"]}